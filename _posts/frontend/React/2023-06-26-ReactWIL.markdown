---
layout: post
title: "정리해보자..."
category: frontend
description: >
  React의 virtualDOM , State  ,LifeCycle
image:
  path: /assets/img/frontend/react/WIL0625.png
tags: React WIL
---
<!--more-->

# 2주차 WIL
{:.no_toc}

* this list will be replaced by the toc
{:toc .large-only}

이번주부터 react에대해 자세히 하나하나 차근차근 공부하기 시작했다.

리액트란 무엇인가를 설명할 수 있는 [virtual dom](2023-06-26-VirtualDOM.markdown){:.heading.flip-title}{:.read-more}을 알아보았다. 짧게 요약하면

## React 가상돔(Virtual DOM)

>- React의 가상 돔 의 장점은 랜더속도가 무쟈게 빠르다 DOM의 비효율성을 보완했기때문인데
>DOM은 변경사항을 반영하는 것은 연산 비용이 많이 들고 느리다.
>
>- DOM의 느림때문에 나온게 가상 돔이다. 
>  
>- 브라우저의 전통적인 렌더링 프로세스는 HTML 파싱, CSS 파싱, 랜더 트리 생성, 레이아웃, 페인팅 등의 단계가있다.
>-  가상 돔을 이용하면 실제 DOM의 최소한의 변경만으로 웹 페이지를 업데이트할 수 있다.
>-  결론 리액트 짱짱맨.

---

다음으로 TIL을 적고싶었던게 [useState](2023-06-24-useState.markdown){:.heading.flip-title}{:.read-more} 다 virtual state에서 re-render를 시키는 요소인 `state`에 대해 알아 보았다.

## State

정리
>1. `state`는 컴포넌트가 렌더링 사이에 일부 정보를 **기억**해야 할 때 사용된다.
>2. `state`는 `useState Hook`을 호출하여 선언된다.
>3. `Hook`은 use로 시작하는 특별한 함수로, `State`와 같은 React의 다른 기능에 연계하여 사용할수 있다.
>4. `Hook`은 import문과 유사한 역할을 할 수 있는데, 조건 없이 호출되어야 한다.
>5. `useState를` 포함한 `Hook`의 호출은 컴포넌트나 다른 `Hook`의 최상위 수준에서만 유효하다.
>6. `useState Hook`은 현재 상태와 상태를 업데이트하는 함수의 쌍을 반환한다.
>7. 여러 개의 `state`를 가질 수 있다. 내부적으로 React는 순서에 따라 `state`를 매칭한다.
>8. `state`는 컴포넌트에 대해 독립적이다. 같은 컴포넌트를 두 군데에서 렌더링한다면, 각각의 복사본은 고유한 상태를 가진다.




--- 

`Hook` 의 `setState`를 공부하니 리액트 컴포넌트의 lifecycle에 대해 자세한게 떠올라 생명주기에 대해 TIL을 작성하였다.

## Lifecycle

자세히 보러가기 -> [Lifecycle](2023-06-24-ReactLifeCycle.markdown){:.heading.flip-title}{:.read-more}
**정리**

>- 리액트의 컴포넌트 생명주기 3단계
>
>  - 순차적으로 실행됨
>  - 생성(Mounting)
>    - `constructor`
>    - `getDerivedStateFromProps`
>    - `render`
>    - `componentDidMount`
>  - 업데이트(Updating)
>    - `getDerivedStateFromProps`
>    - `shouldComponentUpdate`
>    - `render`
>    - `getSnapshotBeforeUpdate`
>    - `componentDidUpdate`
>  - 제거(Unmounting)
>    - `componentWillUnmount`
>
>- 리액트 `Hooks`의 `useEffect`를 통한 메서드 사용법
>- 간단한 생명주기
  ![lifecycle](/assets/img/frontend/react/lifecycle.png)

---

아마 이번주는 의식의 흐름따라 props와 proptype , 그리고 redux , contextAPI 를 쓸수도 있겠다.

스터디 팀원들과 리액트 기능중 하나인 페이지네이션 기능구현을했는데 그것에 대해서도 작성해보자 한다. 주로 코드밖에 없을듯하지만...

